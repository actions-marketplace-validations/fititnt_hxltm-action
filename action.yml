# SPDX-License-Identifier: Unlicense OR 0BSD
name: "Actions with HXLTM - terminology, translation & localization"
# Market place category: Localization, Publishing
description: |
  Multilingual Terminology in Humanitarian Language Exchange.
  TBX, TMX, XLIFF, UTX, XML, CSV, Excel XLSX, Google Sheets, (...)
# description: 125 characters

# description: |
#   GitHub Action for HXLTM (Multilingual Terminology in Humanitarian Language
#   Exchange). HXLTM allows store terminology and translation memory. This action
#   allow use HXLTM pivot standard to export and import(*):
#   TBX (TermBase eXchange), TMX (Translation Memory eXchange),
#   XLIFF (XML Localization Interchange File Format),
#   UTX (Universal Terminology eXchange),
#   XML (free user-configurable schemas),
#   CSV, XLSX (Microsoft Excel), and much more!
branding:
  icon: 'book-open'
  color: 'red'
inputs:
  bin:
    description: "The executable to run."
    required: true
  infile:
    description: "The input file for the program defined by bin parameter"
    required: false
    default: "fontem.ext"
  outfile:
    description: "The input file for the program defined by bin parameter"
    required: false
    default: "objectivum.ext"
  args:
    description: "Arguments passed for the program defined by bin parameter."
    required: false
    # default: "fontem.ext"
  # Languages ------------------------------------------------------------------
  source_language:
    description: "Source language"
    required: false
  target_language:
    description: "Target language"
    required: false
  working_languages:
    description: "Working languages"
    required: false
  non_working_languages:
    description: "Working languages (except)"
    required: false
  auxiliary_languages:
    description: "Auxiliary languages"
    required: false
  export_ad_hoc_template:
    description: "Export custom template (HXLTM Ad Hoc F≈çrmulam)"
    required: false
  export_data_exchange_standard:
    description: "Export to data standard documented on the HXLTM ontologia"
    required: false
outputs:
  resultatum:
    description: "stdout of commmand"
runs:
  using: "docker"
  image: "Dockerfile"
  args:
    - ${{ inputs.bin }}
    - ${{ inputs.infile }}
    - ${{ inputs.outfile }}
    - ${{ inputs.args }}
  env:
    source_language: ${{ inputs.source_language }}
    target_language: ${{ inputs.target_language }}
    working_languages: ${{ inputs.working_languages }}
    non_working_languages: ${{ inputs.non_working_languages }}
    auxiliary_languages: ${{ inputs.auxiliary_languages }}
    export_template: ${{ inputs.export_template }}
